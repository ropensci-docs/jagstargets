[{"path":"https://docs.ropensci.org/jagstargets/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"Development community effort, welcome participation.","code":""},{"path":"https://docs.ropensci.org/jagstargets/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing","text":"participating project, agree abide code conduct.","code":""},{"path":"https://docs.ropensci.org/jagstargets/CONTRIBUTING.html","id":"discussions","dir":"","previous_headings":"","what":"Discussions","title":"Contributing","text":"https://github.com/ropensci/jagstargets/discussions, can post general questions, brainstorm ideas, ask help.","code":""},{"path":"https://docs.ropensci.org/jagstargets/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contributing","text":"https://github.com/ropensci/jagstargets/issues bug reports, performance issues, maintenance tasks, feature requests. post, please abide following guidelines. posting new issue, please take moment search existing similar issues order avoid duplication. bug reports: can, please install latest GitHub version jagstargets (.e. remotes::install_github(\"ropensci/jagstargets\")) verify issue still persists. Describe issue prose clearly concisely possible. Runnable: post enough R code data onlooker can create error computer. Minimal: reduce runtime wherever possible remove complicated details irrelevant issue hand. Readable: format code according tidyverse style guide.","code":""},{"path":"https://docs.ropensci.org/jagstargets/CONTRIBUTING.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Contributing","text":"External code contributions extremely helpful right circumstances. recommended steps. Prior contribution, please propose idea new issue thread maintainer can define intent scope work. Fork repository. Follow GitHub flow create new branch, add commits, open pull request. Discuss code maintainer pull request thread. everything looks good, maintainer merge code project. Please also follow additional guidelines. Respect architecture reasoning package. Depending scope work, may want read design documents (package vignettes). possible, keep contributions small enough easily review manually. okay split work multiple pull requests. Format code according tidyverse style guide check formatting lint_package() function lintr package. Check code coverage covr::package_coverage(). Automated tests cover new changed functionality pull request. Run overall package checks devtools::check() goodpractice::gp() Describe contribution project’s NEWS.md file. sure mention relevant GitHub issue numbers GitHub name done existing news entries. feel contribution substantial enough official author contributor status, please add Authors@R field DESCRIPTION file.","code":""},{"path":"https://docs.ropensci.org/jagstargets/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Eli Lilly Company Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/jagstargets/PULL_REQUEST_TEMPLATE.html","id":null,"dir":"","previous_headings":"","what":"Prework","title":"Prework","text":"understand agree repository’s code conduct. understand agree repository’s contributing guidelines. already submitted issue issue tracker discuss idea maintainer.","code":""},{"path":"https://docs.ropensci.org/jagstargets/PULL_REQUEST_TEMPLATE.html","id":"related-github-issues-and-pull-requests","dir":"","previous_headings":"","what":"Related GitHub issues and pull requests","title":"Prework","text":"Ref: #","code":""},{"path":"https://docs.ropensci.org/jagstargets/PULL_REQUEST_TEMPLATE.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Prework","text":"Please explain purpose scope contribution.","code":""},{"path":"https://docs.ropensci.org/jagstargets/articles/introduction.html","id":"multiple-models","dir":"Articles","previous_headings":"","what":"Multiple models","title":"Introduction to jagstargets","text":"tar_jags() related functions allow supply multiple models jags_files. , model run dataset. Consider new model, y.jags. , add y.jags jags_files argument tar_jags(). graph , notice *_x targets *_y targets connected example_data upstream.","code":"lines <- \"model {   for (i in 1:n) {     y[i] ~ dnorm(x[i] * x[i] * beta, 1) # Regress on x^2 instead of x.   }   beta ~ dnorm(0, 1) }\" writeLines(lines, \"y.jags\") # _targets.R library(targets) library(jagstargets)  generate_data <- function(n = 10) {   true_beta <- stats::rnorm(n = 1, mean = 0, sd = 1)   x <- seq(from = -1, to = 1, length.out = n)   y <- stats::rnorm(n, x * true_beta, 1)   out <- list(n = n, x = x, y = y) }  list(   tar_jags(     example,     jags_files = c(\"x.jags\", \"y.jags\"),     parameters.to.save = \"beta\",     data = generate_data()   ),   tar_target(     custom_summary,     posterior::summarize_draws(       dplyr::select(example_draws_x, -starts_with(\".\")),       ~posterior::quantile2(.x, probs = c(0.25, 0.75))     )   ) ) tar_visnetwork(targets_only = TRUE) #> Warning message: #> package ‘targets’ was built under R version 4.3.3  #>"},{"path":"https://docs.ropensci.org/jagstargets/articles/introduction.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More information","title":"Introduction to jagstargets","text":"targets, please visit reference website https://docs.ropensci.org/targets/ user manual https://books.ropensci.org/targets/. manual walks though advanced features targets high-performance computing cloud storage support.","code":""},{"path":"https://docs.ropensci.org/jagstargets/articles/simulation.html","id":"multiple-models","dir":"Articles","previous_headings":"","what":"Multiple models","title":"Bayesian simulation pipelines with jagstargets","text":"tar_jags_rep_mcmc_summary() similar functions allow supply multiple jags models. , model share collection datasets, .dataset_id column model target output allows custom analyses compare different models . , add new model2.jags file jags_files argument tar_jags_rep_mcmc_summary(). coverage summary , group .name compute coverage statistic model. graph , notice targets model_model1 model_model2 connected model_data upstream. Downstream, model equivalent dplyr::bind_rows(model_model1, model_model2), special columns .name .file distinguish among models.","code":"lines <- \"model {   for (i in 1:n) {     y[i] ~ dnorm(beta[1] + x[i] * x[i] * beta[2], 1) # Regress on x^2, not x.   }   for (i in 1:2) {     beta[i] ~ dnorm(0, 1)   } }\" writeLines(lines, \"model2.jags\") # _targets.R # packages needed to define the pipeline: library(targets) library(jagstargets)  tar_option_set(   packages = \"dplyr\", # packages needed to run the pipeline   memory = \"transient\", # memory efficiency   garbage_collection = TRUE # memory efficiency )  generate_data <- function(n = 10L) {   beta <- stats::rnorm(n = 2, mean = 0, sd = 1)   x <- seq(from = -1, to = 1, length.out = n)   y <- stats::rnorm(n, beta[1] + x * beta[2], 1)   # Elements of .join_data get joined on to the .join_data column   # in the summary output next to the model parameters   # with the same names.   .join_data <- list(beta = beta)   list(n = n, x = x, y = y, .join_data = .join_data) }  list(   tar_jags_rep_summary(     model,     c(\"model.jags\", \"model2.jags\"), # another model     data = generate_data(),     parameters.to.save = \"beta\",     batches = 5,     reps = 4,     variables = \"beta\",     summaries = list(       ~posterior::quantile2(.x, probs = c(0.025, 0.975))     )   ),   tar_target(     coverage,     model %>%       group_by(.name) %>%       summarize(coverage = mean(q2.5 < .join_data & .join_data < q97.5))   ) ) tar_visnetwork() #> Warning message: #> package ‘targets’ was built under R version 4.3.3  #>"},{"path":[]},{"path":"https://docs.ropensci.org/jagstargets/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"William Michael Landau. Author, maintainer. David Lawrence Miller. Reviewer. Eli Lilly Company. Copyright holder.","code":""},{"path":"https://docs.ropensci.org/jagstargets/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Landau, W. M., (2021). jagstargets R package: reproducible workflow framework Bayesian data analysis JAGS. Journal Open Source Software, 6(68), 3877, https://doi.org/10.21105/joss.03877","code":"@Article{,   title = {The jagstargets R package: a reproducible workflow framework for Bayesian data analysis with JAGS},   author = {William Michael Landau},   journal = {Journal of Open Source Software},   year = {2021},   volume = {6},   number = {68},   pages = {3877},   url = {https://doi.org/10.21105/joss.03877}, }"},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"jagstargets-","dir":"","previous_headings":"","what":"Targets for JAGS Pipelines","title":"Targets for JAGS Pipelines","text":"Bayesian data analysis usually incurs long runtimes cumbersome custom code, process prototyping deploying custom JAGS models can become daunting software engineering challenge. ease burden, jagstargets R package creates JAGS pipelines concise, efficient, scalable, tailored needs Bayesian statisticians. Leveraging targets, jagstargets pipelines automatically parallelize computation skip expensive steps results already date. Minimal custom user-side code required, need manually configure branching, jagstargets easier use targets R2jags directly.","code":""},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Targets for JAGS Pipelines","text":"prerequisites targets R package. Basic familiarity targets: watch minutes 7 40 video, read chapter user manual. Familiarity Bayesian Statistics JAGS. Prior knowledge rjags R2jags helps.","code":""},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"how-to-get-started","dir":"","previous_headings":"","what":"How to get started","title":"Targets for JAGS Pipelines","text":"Read jagstargets introductory vignette, use https://docs.ropensci.org/jagstargets/ reference constructing workflows. need analyze large collections simulated datasets, please consult simulation vignette.","code":""},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Targets for JAGS Pipelines","text":"jagstargets requires user install JAGS, rjags, R2jags beforehand. can install JAGS https://mcmc-jags.sourceforge.io/, can install rest CRAN. , install latest release CRAN. Alternatively, install GitHub development version access latest features patches.","code":"install.packages(c(\"rjags\", \"R2jags\")) install.packages(\"jagstargets\") install.packages(\"remotes\") remotes::install_github(\"ropensci/jagstargets\")"},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Targets for JAGS Pipelines","text":"Begin one models: example, simple regression model response variable y covariate x. Next, write JAGS model file model like model.jags file . begin reproducible analysis pipeline model, write _targets.R file loads packages, defines function generate JAGS data, lists pipeline targets. target list can call target factories like tar_jags() well ordinary targets tar_target(). following minimal example simple enough contain entirely within _targets.R file, larger projects, may wish store functions separate files targets-stan example. Run tar_visnetwork() check _targets.R correctness, call tar_make() run pipeline. Access results using tar_read(), e.g. tar_read(tar_read(example_summary_x). Visit introductory vignette read example.","code":"model {   for (i in 1:n) {     y[i] ~ dnorm(x[i] * beta, 1)   }   beta ~ dnorm(0, 1) } # _targets.R library(targets) library(jagstargets)  generate_data <- function() {   true_beta <- stats::rnorm(n = 1, mean = 0, sd = 1)   x <- seq(from = -1, to = 1, length.out = n)   y <- stats::rnorm(n, x * true_beta, 1)   out <- list(n = n, x = x, y = y, true_beta = true_beta) }  list(   tar_jags(     example,     jags_files = \"model.jags\", # You provide this file.     parameters.to.save = \"beta\",     data = generate_data()   ) )"},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"how-the-package-works","dir":"","previous_headings":"","what":"How the package works","title":"Targets for JAGS Pipelines","text":"jagstargets supports specialized target factories create ensembles target objects R2jags workflows. target factories abstract away details targets R2jags make packages easier use. details, please read introductory vignette.","code":""},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"help","dir":"","previous_headings":"","what":"Help","title":"Targets for JAGS Pipelines","text":"Please read targets help guide https://books.ropensci.org/targets/help.html learn ask help. trouble using jagstargets, can ask help GitHub discussions forum. purpose jagstargets combine targets R2jags, issue may something one latter two packages, dependency targets, R2jags . troubleshoot, peel back many layers possible isolate problem. example, issue comes R2jags, create reproducible example directly invokes R2jags without invoking jagstargets. GitHub discussion issue forums packages great resources.","code":""},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"participation","dir":"","previous_headings":"","what":"Participation","title":"Targets for JAGS Pipelines","text":"Development community effort, welcome discussion contribution. participating project, agree abide code conduct contributing guide.","code":""},{"path":"https://docs.ropensci.org/jagstargets/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Targets for JAGS Pipelines","text":"","code":"citation(\"jagstargets\") #>  #> To cite jagstargets in publications use: #>  #>   Landau, W. M., (2021). The jagstargets R package: a reproducible #>   workflow framework for Bayesian data analysis with JAGS. Journal of #>   Open Source Software, 6(68), 3877, #>   https://doi.org/10.21105/joss.03877 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {The jagstargets R package: a reproducible workflow framework for Bayesian data analysis with JAGS}, #>     author = {William Michael Landau}, #>     journal = {Journal of Open Source Software}, #>     year = {2021}, #>     volume = {6}, #>     number = {68}, #>     pages = {3877}, #>     url = {https://doi.org/10.21105/joss.03877}, #>   }"},{"path":"https://docs.ropensci.org/jagstargets/reference/jagstargets-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jagstargets: Targets for JAGS Workflows — jagstargets-package","title":"jagstargets: Targets for JAGS Workflows — jagstargets-package","text":"Bayesian data analysis usually incurs long runtimes cumbersome custom code. pipeline toolkit tailored Bayesian statisticians, jagstargets R package leverages targets R2jags ease burden. jagstargets makes super easy set scalable JAGS pipelines automatically parallelize computation skip expensive steps results already date. Minimal custom code required, need manually configure branching, usage much easier targets alone.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":null,"dir":"Reference","previous_headings":"","what":"One MCMC per model with multiple outputs — tar_jags","title":"One MCMC per model with multiple outputs — tar_jags","text":"Targets run JAGS model MCMC save multiple outputs.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One MCMC per model with multiple outputs — tar_jags","text":"","code":"tar_jags(   name,   jags_files,   parameters.to.save,   data = list(),   summaries = list(),   summary_args = list(),   n.cluster = 1,   n.chains = 3,   n.iter = 2000,   n.burnin = as.integer(n.iter/2),   n.thin = 1,   jags.module = c(\"glm\", \"dic\"),   inits = NULL,   RNGname = c(\"Wichmann-Hill\", \"Marsaglia-Multicarry\", \"Super-Duper\", \"Mersenne-Twister\"),   jags.seed = 1,   stdout = NULL,   stderr = NULL,   progress.bar = \"text\",   refresh = 0,   draws = TRUE,   summary = TRUE,   dic = TRUE,   tidy_eval = targets::tar_option_get(\"tidy_eval\"),   packages = targets::tar_option_get(\"packages\"),   library = targets::tar_option_get(\"library\"),   format = \"qs\",   format_df = \"fst_tbl\",   repository = targets::tar_option_get(\"repository\"),   error = targets::tar_option_get(\"error\"),   memory = targets::tar_option_get(\"memory\"),   garbage_collection = targets::tar_option_get(\"garbage_collection\"),   deployment = targets::tar_option_get(\"deployment\"),   priority = targets::tar_option_get(\"priority\"),   resources = targets::tar_option_get(\"resources\"),   storage = targets::tar_option_get(\"storage\"),   retrieval = targets::tar_option_get(\"retrieval\"),   cue = targets::tar_option_get(\"cue\"),   description = targets::tar_option_get(\"description\") )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One MCMC per model with multiple outputs — tar_jags","text":"name Symbol, base name collection targets. Serves prefix target names. jags_files Character vector JAGS model files. supply multiple files, model run one shared dataset generated code data. supply unnamed vector, tools::file_path_sans_ext(basename(jags_files)) used target name suffixes. jags_files named vector, suffixed come names(jags_files). parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. data Code generate data list JAGS model. Optionally include .join_data element join parts data correspondingly named parameters summary output. See vignettes details. summaries List summary functions passed ... posterior::summarize_draws() $summary() CmdStanFit object. summary_args List summary function arguments passed .args posterior::summarize_draws() $summary() CmdStanFit object. n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.seed Seeds apply JAGS, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. draws Logical, whether create target posterior draws. Saves draws compressed posterior::as_draws_df() tibble. Convenient, duplicates storage. summary Logical, whether create target store small data frame posterior summary statistics convergence diagnostics. dic Logical, whether create target deviance information criterion (DIC) results. tidy_eval Logical, whether enable tidy evaluation interpreting command pattern. TRUE, can use \"bang-bang\" operator !! programmatically insert values global objects. packages Character vector packages load right target runs output data reloaded downstream targets. Use tar_option_set() set packages globally subsequent targets define. library Character vector library paths try loading packages. format Character length 1, storage format non-data-frame targets JAGS data JAGS fit objects. Please choose =purpose format \"qs\" \"aws_qs\" rather file format like \"file\" data frame format like \"parquet\". storage formats, see help file targets::tar_target(). format_df Character length 1, storage format data frame targets posterior draws. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). repository Character length 1, remote repository target storage. Choices: \"local\": file system local machine. \"aws\": Amazon Web Services (AWS) S3 bucket. Can configured non-AWS S3 bucket using endpoint argument tar_resources_aws(), versioning capabilities may lost . See cloud storage section https://books.ropensci.org/targets/data.html details instructions. \"gcp\": Google Cloud Platform storage bucket. See cloud storage section https://books.ropensci.org/targets/data.html details instructions. Note: repository \"local\" format \"file\" target create single output file. output file uploaded cloud tracked changes exists cloud. local file deleted target runs. error Character length 1, target stops throws error. Options: \"stop\": whole pipeline stops throws error. \"continue\": whole pipeline keeps going. \"abridge\": currently running targets keep running, new targets launch . (Visit https://books.ropensci.org/targets/debugging.html learn debug targets using saved workspaces.) \"null\": errored target continues returns NULL. data hash deliberately wrong target date next run pipeline. memory Character length 1, memory strategy. \"persistent\", target stays memory end pipeline (unless storage \"worker\", case targets unloads value memory right storing order avoid sending copious data network). \"transient\", target gets unloaded every new target completes. Either way, target gets automatically loaded memory whenever another target needs value. cloud-based dynamic files (e.g. format = \"file\" repository = \"aws\"), memory strategy applies temporary local copy file: \"persistent\" means remains end pipeline deleted, \"transient\" means gets deleted soon possible. former conserves bandwidth, latter conserves local storage. garbage_collection Logical, whether run base::gc() just target runs. deployment Character length 1. deployment \"main\", target run central controlling R process. Otherwise, deployment \"worker\" set pipeline distributed/parallel computing, target runs parallel worker. distributed/parallel computing targets, please visit https://books.ropensci.org/targets/crew.html. priority Numeric length 1 0 1. Controls targets get deployed first multiple competing targets ready simultaneously. Targets priorities closer 1 get dispatched earlier (polled earlier tar_make_future()). resources Object returned tar_resources() optional settings high-performance computing functionality, alternative data storage formats, optional capabilities targets. See tar_resources() details. storage Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's return value sent back host machine saved/uploaded locally. \"worker\": worker saves/uploads value. \"none\": almost never recommended. niche situations, e.g. data needs loaded explicitly another language. use , return value target totally ignored target ends, downstream target still attempts load data file (except retrieval = \"none\"). select storage = \"none\", return value target's command ignored, data saved automatically. dynamic files (format = \"file\") responsibility user write data store inside target. distinguishing feature storage = \"none\" (opposed format = \"file\") general case, downstream targets automatically try load data data store dependency. corollary, storage = \"none\" completely unnecessary format \"file\". retrieval Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's dependencies loaded host machine sent worker target runs. \"worker\": worker loads targets dependencies. \"none\": dependencies loaded . choice almost never recommended. niche situations, e.g. data needs loaded explicitly another language. cue optional object tar_cue() customize rules decide whether target date. description Character length 1, custom free-form human-readable text description target. Descriptions appear target labels functions like tar_manifest() tar_visnetwork(), let select subsets targets names argument functions like tar_make(). example, tar_manifest(names = tar_described_as(starts_with(\"survival model\"))) lists targets whose descriptions start character string \"survival model\".","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One MCMC per model with multiple outputs — tar_jags","text":"tar_jags() returns list target objects. See \"Target objects\" section background. target names use name argument prefix, individual elements jags_files appear suffixes applicable. example, specific target objects returned tar_jags(name = x, jags_files = \"y.jags\", ...) returns list targets::tar_target() objects: x_file_y: reproducibly track JAGS model file. Returns character vector length 1 path JAGS model file. x_lines_y: read contents JAGS model file safe transport parallel workers. Returns character vector lines model file. x_data: run R expression data argument produce JAGS dataset model. Returns JAGS data list. x_mcmc_y: run MCMC model dataset. Returns rjags object R2jags MCMC results. x_draws_y: extract posterior samples x_mcmc_y. Returns tidy data frame MCMC draws. Omitted draws = FALSE. x_summary_y: extract posterior summaries x_mcmc_y. Returns tidy data frame MCMC draws. Omitted summary = FALSE. x_dic: extract deviance information criterion (DIC) info x_mcmc_y. Returns tidy data frame DIC info. Omitted dic = FALSE.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"One MCMC per model with multiple outputs — tar_jags","text":"MCMC targets use R2jags::jags() n.cluster 1 R2jags::jags.parallel() otherwise. arguments tar_jags() forwarded functions.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":"target-objects","dir":"Reference","previous_headings":"","what":"Target objects","title":"One MCMC per model with multiple outputs — tar_jags","text":"stantargets functions target factories, means return target objects lists target objects. Target objects represent skippable steps analysis pipeline described https://books.ropensci.org/targets/. Please read walkthrough https://books.ropensci.org/targets/walkthrough.html understand role target objects analysis pipelines. developers, https://wlandau.github.io/targetopia/contributing.html#target-factories explains target factories (functions like one generate targets) design specification https://books.ropensci.org/targets-design/ details structure composition target objects.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One MCMC per model with multiple outputs — tar_jags","text":"","code":"if (requireNamespace(\"R2jags\", quietly = TRUE)) { targets::tar_dir({ # tar_dir() runs code from a temporary directory. targets::tar_script({ library(jagstargets) # Do not use a temp file for a real project # or else your targets will always rerun. tmp <- tempfile(pattern = \"\", fileext = \".jags\") tar_jags_example_file(tmp) list(   tar_jags(     your_model,     jags_files = tmp,     data = tar_jags_example_data(),     parameters.to.save = \"beta\",     stdout = R.utils::nullfile(),     stderr = R.utils::nullfile()   ) ) }, ask = FALSE) targets::tar_make() }) } #> ▶ dispatched target your_model_file_X7184902e1d6 #> ● completed target your_model_file_X7184902e1d6 [0 seconds] #> ▶ dispatched target your_model_data #> ● completed target your_model_data [0 seconds] #> ▶ dispatched target your_model_lines_X7184902e1d6 #> ● completed target your_model_lines_X7184902e1d6 [0.001 seconds] #> ▶ dispatched target your_model_mcmc_X7184902e1d6 #> ● completed target your_model_mcmc_X7184902e1d6 [0.028 seconds] #> ▶ dispatched target your_model_draws_X7184902e1d6 #> ● completed target your_model_draws_X7184902e1d6 [0.001 seconds] #> ▶ dispatched target your_model_dic_X7184902e1d6 #> ● completed target your_model_dic_X7184902e1d6 [0.002 seconds] #> ▶ dispatched target your_model_summary_X7184902e1d6 #> ● completed target your_model_summary_X7184902e1d6 [0.028 seconds] #> ▶ ended pipeline [0.153 seconds] #> Warning message: #> package ‘targets’ was built under R version 4.3.3  #>"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a strategic piece of R2jags output. — tar_jags_df","title":"Select a strategic piece of R2jags output. — tar_jags_df","text":"user-side function. call directly. Exported infrastructure reasons .","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a strategic piece of R2jags output. — tar_jags_df","text":"","code":"tar_jags_df(   fit,   data,   output = c(\"draws\", \"summary\", \"dic\"),   variables = NULL,   summaries = NULL,   summary_args = NULL,   transform = NULL )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a strategic piece of R2jags output. — tar_jags_df","text":"fit R2jags object. data list, original JAGS dataset. output Character length 1 denoting type output tibble return: \"draws\" MCMC samples (take lot space) \"summary\" lightweight posterior summary statistics, \"dic\" overall deviance information criterion effective number parameters variables Character vector model parameter names. output posterior summaries restricted variables. summaries List summary functions passed ... posterior::summarize_draws() $summary() CmdStanFit object. summary_args List summary function arguments passed .args posterior::summarize_draws() $summary() CmdStanFit object. transform Symbol NULL, name function accepts arguments data draws returns data frame. , data JAGS data list supplied model, draws data frame one column per model parameter one row per posterior sample. arguments data draws must valid default values jagstargets populate . See simulation-based calibration discussion thread https://github.com/ropensci/jagstargets/discussions/31 example.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a strategic piece of R2jags output. — tar_jags_df","text":"data frame R2jags output. Depends output argument.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate example JAGS data. — tar_jags_example_data","title":"Simulate example JAGS data. — tar_jags_example_data","text":"example dataset compatible model file tar_jags_example_file(). output .join_data element true value beta simulation automatically appended beta rows summary output.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate example JAGS data. — tar_jags_example_data","text":"","code":"tar_jags_example_data(n = 10L)"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulate example JAGS data. — tar_jags_example_data","text":"list following elements: n: integer, number data points. x: numeric, covariate vector. y: numeric, response variable. true_beta: numeric length 1, value regression coefficient beta used simulation. .join_data: list simulated values appended .join_data column output targets generated functions tar_jags_rep_summary(). Contains regression coefficient beta (numeric length 1) prior predictive data y (numeric vector).","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate example JAGS data. — tar_jags_example_data","text":"n Integer length 1, number data points.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate example JAGS data. — tar_jags_example_data","text":"List, dataset compatible model file tar_jags_example_file(). output .join_data element true value beta simulation automatically appended beta rows summary output.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate example JAGS data. — tar_jags_example_data","text":"tar_jags_example_data() function draws JAGS dataset prior predictive distribution model tar_jags_example_file(). First, regression coefficient beta drawn standard normal prior, covariate x computed. , conditional beta draws covariate, response vector y drawn Normal(x * beta, 1) likelihood.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate example JAGS data. — tar_jags_example_data","text":"","code":"tar_jags_example_data() #> $n #> [1] 10 #>  #> $x #>  [1] -1.0000000 -0.7777778 -0.5555556 -0.3333333 -0.1111111  0.1111111 #>  [7]  0.3333333  0.5555556  0.7777778  1.0000000 #>  #> $y #>  [1] -0.2709939  0.8488641  2.2220835 -1.5367543  0.5438387 -1.8944232 #>  [7] -0.6162477 -0.2096605  0.3231143 -1.1967803 #>  #> $.join_data #> $.join_data$beta #> [1] -0.2827054 #>  #>"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an example JAGS model file. — tar_jags_example_file","title":"Write an example JAGS model file. — tar_jags_example_file","text":"Overwrites file path built-example JAGS model file.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an example JAGS model file. — tar_jags_example_file","text":"","code":"tar_jags_example_file(path = tempfile(pattern = \"\", fileext = \".jags\"))"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an example JAGS model file. — tar_jags_example_file","text":"path Character length 1, file path write model file.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an example JAGS model file. — tar_jags_example_file","text":"NULL (invisibly).","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_example_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an example JAGS model file. — tar_jags_example_file","text":"","code":"path <- tempfile(pattern = \"\", fileext = \".jags\") tar_jags_example_file(path = path) writeLines(readLines(path)) #> model { #>   for (i in 1:n) { #>     y[i] ~ dnorm(x[i] * beta, 1) #>   } #>   beta ~ dnorm(0, 1) #> }"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy output from multiple MCMCs per model. — tar_jags_rep","title":"Tidy output from multiple MCMCs per model. — tar_jags_rep","text":"Internal function. Users invoke directly.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy output from multiple MCMCs per model. — tar_jags_rep","text":"","code":"tar_jags_rep(   name,   jags_files,   parameters.to.save,   data = quote(list()),   batches = 1L,   reps = 1L,   output = c(\"summary\", \"draws\", \"dic\"),   variables = NULL,   summaries = NULL,   summary_args = NULL,   transform = NULL,   combine = TRUE,   n.cluster = 1,   n.chains = 3,   n.iter = 2000,   n.burnin = as.integer(n.iter/2),   n.thin = 1,   jags.module = c(\"glm\", \"dic\"),   inits = NULL,   RNGname = c(\"Wichmann-Hill\", \"Marsaglia-Multicarry\", \"Super-Duper\", \"Mersenne-Twister\"),   jags.seed = NULL,   stdout = NULL,   stderr = NULL,   progress.bar = \"text\",   refresh = 0,   tidy_eval = targets::tar_option_get(\"tidy_eval\"),   packages = targets::tar_option_get(\"packages\"),   library = targets::tar_option_get(\"library\"),   format = \"qs\",   format_df = \"fst_tbl\",   repository = targets::tar_option_get(\"repository\"),   error = targets::tar_option_get(\"error\"),   memory = targets::tar_option_get(\"memory\"),   garbage_collection = targets::tar_option_get(\"garbage_collection\"),   deployment = targets::tar_option_get(\"deployment\"),   priority = targets::tar_option_get(\"priority\"),   resources = targets::tar_option_get(\"resources\"),   storage = targets::tar_option_get(\"storage\"),   retrieval = targets::tar_option_get(\"retrieval\"),   cue = targets::tar_option_get(\"cue\"),   description = targets::tar_option_get(\"description\") )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy output from multiple MCMCs per model. — tar_jags_rep","text":"name Symbol, base name collection targets. Serves prefix target names. jags_files Character vector JAGS model files. supply multiple files, model run one shared dataset generated code data. supply unnamed vector, tools::file_path_sans_ext(basename(jags_files)) used target name suffixes. jags_files named vector, suffixed come names(jags_files). parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. data Code generate data list JAGS model. Optionally include .join_data element join parts data correspondingly named parameters summary output. See vignettes details. batches Number batches. batch runs model reps times. reps Number replications per batch. Ideally, rep produce random dataset using code supplied data. output Character length 1 denoting type output tibble return: \"draws\" MCMC samples (take lot space) \"summary\" lightweight posterior summary statistics, \"dic\" overall deviance information criterion effective number parameters variables Character vector model parameter names. output posterior summaries restricted variables. summaries List summary functions passed ... posterior::summarize_draws() $summary() CmdStanFit object. summary_args List summary function arguments passed .args posterior::summarize_draws() $summary() CmdStanFit object. transform Symbol NULL, name function accepts arguments data draws returns data frame. , data JAGS data list supplied model, draws data frame one column per model parameter one row per posterior sample. arguments data draws must valid default values jagstargets populate . See simulation-based calibration discussion thread https://github.com/ropensci/jagstargets/discussions/31 example. combine Logical, whether create target combine model results single data frame downstream. Convenient, duplicates data. n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.seed jags.seed argument tar_jags_rep*() functions deprecated. See \"Seeds\" section details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. tidy_eval Logical, whether enable tidy evaluation interpreting command pattern. TRUE, can use \"bang-bang\" operator !! programmatically insert values global objects. packages Character vector packages load right target runs output data reloaded downstream targets. Use tar_option_set() set packages globally subsequent targets define. library Character vector library paths try loading packages. format Character length 1, storage format data frames posterior summaries data frames returned targets. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). format_df Character length 1, storage format data frame targets posterior draws. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). repository Character length 1, remote repository target storage. Choices: \"local\": file system local machine. \"aws\": Amazon Web Services (AWS) S3 bucket. Can configured non-AWS S3 bucket using endpoint argument tar_resources_aws(), versioning capabilities may lost . See cloud storage section https://books.ropensci.org/targets/data.html details instructions. \"gcp\": Google Cloud Platform storage bucket. See cloud storage section https://books.ropensci.org/targets/data.html details instructions. Note: repository \"local\" format \"file\" target create single output file. output file uploaded cloud tracked changes exists cloud. local file deleted target runs. error Character length 1, target stops throws error. Options: \"stop\": whole pipeline stops throws error. \"continue\": whole pipeline keeps going. \"abridge\": currently running targets keep running, new targets launch . (Visit https://books.ropensci.org/targets/debugging.html learn debug targets using saved workspaces.) \"null\": errored target continues returns NULL. data hash deliberately wrong target date next run pipeline. memory Character length 1, memory strategy. \"persistent\", target stays memory end pipeline (unless storage \"worker\", case targets unloads value memory right storing order avoid sending copious data network). \"transient\", target gets unloaded every new target completes. Either way, target gets automatically loaded memory whenever another target needs value. cloud-based dynamic files (e.g. format = \"file\" repository = \"aws\"), memory strategy applies temporary local copy file: \"persistent\" means remains end pipeline deleted, \"transient\" means gets deleted soon possible. former conserves bandwidth, latter conserves local storage. garbage_collection Logical, whether run base::gc() just target runs. deployment Character length 1. deployment \"main\", target run central controlling R process. Otherwise, deployment \"worker\" set pipeline distributed/parallel computing, target runs parallel worker. distributed/parallel computing targets, please visit https://books.ropensci.org/targets/crew.html. priority Numeric length 1 0 1. Controls targets get deployed first multiple competing targets ready simultaneously. Targets priorities closer 1 get dispatched earlier (polled earlier tar_make_future()). resources Object returned tar_resources() optional settings high-performance computing functionality, alternative data storage formats, optional capabilities targets. See tar_resources() details. storage Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's return value sent back host machine saved/uploaded locally. \"worker\": worker saves/uploads value. \"none\": almost never recommended. niche situations, e.g. data needs loaded explicitly another language. use , return value target totally ignored target ends, downstream target still attempts load data file (except retrieval = \"none\"). select storage = \"none\", return value target's command ignored, data saved automatically. dynamic files (format = \"file\") responsibility user write data store inside target. distinguishing feature storage = \"none\" (opposed format = \"file\") general case, downstream targets automatically try load data data store dependency. corollary, storage = \"none\" completely unnecessary format \"file\". retrieval Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's dependencies loaded host machine sent worker target runs. \"worker\": worker loads targets dependencies. \"none\": dependencies loaded . choice almost never recommended. niche situations, e.g. data needs loaded explicitly another language. cue optional object tar_cue() customize rules decide whether target date. description Character length 1, custom free-form human-readable text description target. Descriptions appear target labels functions like tar_manifest() tar_visnetwork(), let select subsets targets names argument functions like tar_make(). example, tar_manifest(names = tar_described_as(starts_with(\"survival model\"))) lists targets whose descriptions start character string \"survival model\".","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy output from multiple MCMCs per model. — tar_jags_rep","text":"tar_jags_rep(name = x, jags_files = \"y.jags\") returns list targets::tar_target() objects: x_file_y: reproducibly track jags model file. x_lines_y: contents jags model file. x_data: dynamic branching target simulated datasets. x_y: dynamic branching target tidy data frames MCMC summaries. x: combine model-specific summary targets single data frame columns distinguish among models. Suppressed combine FALSE.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep.html","id":"seeds","dir":"Reference","previous_headings":"","what":"Seeds","title":"Tidy output from multiple MCMCs per model. — tar_jags_rep","text":"Rep-specific random number generator seeds data models automatically set based batch, rep, parent target name, tar_option_get(\"seed\"). ensures rep-specific seeds change change batching configuration (e.g. 40 batches 10 reps vs 20 batches 20 reps ). data seed .seed list element output, JAGS seed .seed column JAGS model output.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_data_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a batch of data — tar_jags_rep_data_batch","title":"Generate a batch of data — tar_jags_rep_data_batch","text":"user-side function. invoke directly.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_data_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a batch of data — tar_jags_rep_data_batch","text":"","code":"tar_jags_rep_data_batch(reps, batch, command)"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_data_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a batch of data — tar_jags_rep_data_batch","text":"reps Positive integer length 1, number reps run. batch Positive integer length 1, index current batch. command R code run generate one dataset.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_data_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a batch of data — tar_jags_rep_data_batch","text":"list JAGS datasets containing data dataset IDs.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_data_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a batch of data — tar_jags_rep_data_batch","text":"","code":"tar_jags_rep_data_batch(2, 1, tar_jags_example_data()) #> [[1]] #> [[1]]$n #> [1] 10 #>  #> [[1]]$x #>  [1] -1.0000000 -0.7777778 -0.5555556 -0.3333333 -0.1111111  0.1111111 #>  [7]  0.3333333  0.5555556  0.7777778  1.0000000 #>  #> [[1]]$y #>  [1] -1.8624114 -1.1858780 -2.1559287  0.1231455 -1.0782523 -0.8055015 #>  [7]  1.4449664  2.3451113 -0.1321133  0.7859858 #>  #> [[1]]$.join_data #> [[1]]$.join_data$beta #> [1] 1.119918 #>  #>  #> [[1]]$.dataset_id #> [1] \"target_1\" #>  #> [[1]]$.seed #> [1] 1725770133 #>  #>  #> [[2]] #> [[2]]$n #> [1] 10 #>  #> [[2]]$x #>  [1] -1.0000000 -0.7777778 -0.5555556 -0.3333333 -0.1111111  0.1111111 #>  [7]  0.3333333  0.5555556  0.7777778  1.0000000 #>  #> [[2]]$y #>  [1] -0.34995231  0.69395629  0.01211559 -0.76912820  1.19567015  0.79065893 #>  [7]  0.13101036  0.90114131 -0.31153354  0.74501723 #>  #> [[2]]$.join_data #> [[2]]$.join_data$beta #> [1] 0.9679472 #>  #>  #> [[2]]$.dataset_id #> [1] \"target_2\" #>  #> [[2]]$.seed #> [1] -1613816968 #>  #>"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"Run multiple MCMCs simulated datasets return DIC effective number parameters run.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"","code":"tar_jags_rep_dic(   name,   jags_files,   parameters.to.save,   data = list(),   batches = 1L,   reps = 1L,   combine = TRUE,   n.cluster = 1,   n.chains = 3,   n.iter = 2000,   n.burnin = as.integer(n.iter/2),   n.thin = 1,   jags.module = c(\"glm\", \"dic\"),   inits = NULL,   RNGname = c(\"Wichmann-Hill\", \"Marsaglia-Multicarry\", \"Super-Duper\", \"Mersenne-Twister\"),   jags.seed = NULL,   stdout = NULL,   stderr = NULL,   progress.bar = \"text\",   refresh = 0,   tidy_eval = targets::tar_option_get(\"tidy_eval\"),   packages = targets::tar_option_get(\"packages\"),   library = targets::tar_option_get(\"library\"),   format = \"qs\",   format_df = \"fst_tbl\",   repository = targets::tar_option_get(\"repository\"),   error = targets::tar_option_get(\"error\"),   memory = targets::tar_option_get(\"memory\"),   garbage_collection = targets::tar_option_get(\"garbage_collection\"),   deployment = targets::tar_option_get(\"deployment\"),   priority = targets::tar_option_get(\"priority\"),   resources = targets::tar_option_get(\"resources\"),   storage = targets::tar_option_get(\"storage\"),   retrieval = targets::tar_option_get(\"retrieval\"),   cue = targets::tar_option_get(\"cue\"),   description = targets::tar_option_get(\"description\") )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"name Symbol, base name collection targets. Serves prefix target names. jags_files Character vector JAGS model files. supply multiple files, model run one shared dataset generated code data. supply unnamed vector, tools::file_path_sans_ext(basename(jags_files)) used target name suffixes. jags_files named vector, suffixed come names(jags_files). parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. data Code generate data list JAGS model. Optionally include .join_data element join parts data correspondingly named parameters summary output. See vignettes details. batches Number batches. batch runs model reps times. reps Number replications per batch. Ideally, rep produce random dataset using code supplied data. combine Logical, whether create target combine model results single data frame downstream. Convenient, duplicates data. n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.seed jags.seed argument tar_jags_rep*() functions deprecated. See \"Seeds\" section details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. tidy_eval Logical, whether enable tidy evaluation interpreting command pattern. TRUE, can use \"bang-bang\" operator !! programmatically insert values global objects. packages Character vector packages load right target runs output data reloaded downstream targets. Use tar_option_set() set packages globally subsequent targets define. library Character vector library paths try loading packages. format Character length 1, storage format data frames posterior summaries data frames returned targets. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). format_df Character length 1, storage format data frame targets posterior draws. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). repository Character length 1, remote repository target storage. Choices: \"local\": file system local machine. \"aws\": Amazon Web Services (AWS) S3 bucket. Can configured non-AWS S3 bucket using endpoint argument tar_resources_aws(), versioning capabilities may lost . See cloud storage section https://books.ropensci.org/targets/data.html details instructions. \"gcp\": Google Cloud Platform storage bucket. See cloud storage section https://books.ropensci.org/targets/data.html details instructions. Note: repository \"local\" format \"file\" target create single output file. output file uploaded cloud tracked changes exists cloud. local file deleted target runs. error Character length 1, target stops throws error. Options: \"stop\": whole pipeline stops throws error. \"continue\": whole pipeline keeps going. \"abridge\": currently running targets keep running, new targets launch . (Visit https://books.ropensci.org/targets/debugging.html learn debug targets using saved workspaces.) \"null\": errored target continues returns NULL. data hash deliberately wrong target date next run pipeline. memory Character length 1, memory strategy. \"persistent\", target stays memory end pipeline (unless storage \"worker\", case targets unloads value memory right storing order avoid sending copious data network). \"transient\", target gets unloaded every new target completes. Either way, target gets automatically loaded memory whenever another target needs value. cloud-based dynamic files (e.g. format = \"file\" repository = \"aws\"), memory strategy applies temporary local copy file: \"persistent\" means remains end pipeline deleted, \"transient\" means gets deleted soon possible. former conserves bandwidth, latter conserves local storage. garbage_collection Logical, whether run base::gc() just target runs. deployment Character length 1. deployment \"main\", target run central controlling R process. Otherwise, deployment \"worker\" set pipeline distributed/parallel computing, target runs parallel worker. distributed/parallel computing targets, please visit https://books.ropensci.org/targets/crew.html. priority Numeric length 1 0 1. Controls targets get deployed first multiple competing targets ready simultaneously. Targets priorities closer 1 get dispatched earlier (polled earlier tar_make_future()). resources Object returned tar_resources() optional settings high-performance computing functionality, alternative data storage formats, optional capabilities targets. See tar_resources() details. storage Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's return value sent back host machine saved/uploaded locally. \"worker\": worker saves/uploads value. \"none\": almost never recommended. niche situations, e.g. data needs loaded explicitly another language. use , return value target totally ignored target ends, downstream target still attempts load data file (except retrieval = \"none\"). select storage = \"none\", return value target's command ignored, data saved automatically. dynamic files (format = \"file\") responsibility user write data store inside target. distinguishing feature storage = \"none\" (opposed format = \"file\") general case, downstream targets automatically try load data data store dependency. corollary, storage = \"none\" completely unnecessary format \"file\". retrieval Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's dependencies loaded host machine sent worker target runs. \"worker\": worker loads targets dependencies. \"none\": dependencies loaded . choice almost never recommended. niche situations, e.g. data needs loaded explicitly another language. cue optional object tar_cue() customize rules decide whether target date. description Character length 1, custom free-form human-readable text description target. Descriptions appear target labels functions like tar_manifest() tar_visnetwork(), let select subsets targets names argument functions like tar_make(). example, tar_manifest(names = tar_described_as(starts_with(\"survival model\"))) lists targets whose descriptions start character string \"survival model\".","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"tar_jags_rep_dic() returns list target objects. See \"Target objects\" section background. target names use name argument prefix, individual elements jags_files appear suffixes applicable. example, specific target objects returned tar_jags_rep_dic(name = x, jags_files = \"y.jags\") follows. x_file_y: reproducibly track JAGS model file. Returns character vector length 1 path JAGS model file. x_lines_y: read contents JAGS model file safe transport parallel workers. Returns character vector lines model file. x_data: use dynamic branching generate multiple JAGS datasets R expression data argument. dynamic branch returns batch JAGS data lists. x_y: run JAGS dataset x_data. dynamic branch returns tidy data frame DIC results batch data. x: combine batches x_y non-dynamic target. Suppressed combine FALSE. Returns long tidy data frame DIC info branches x_y.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"MCMC targets use R2jags::jags() n.cluster 1 R2jags::jags.parallel() otherwise. arguments tar_jags() forwarded functions.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"seeds","dir":"Reference","previous_headings":"","what":"Seeds","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"Rep-specific random number generator seeds data models automatically set based batch, rep, parent target name, tar_option_get(\"seed\"). ensures rep-specific seeds change change batching configuration (e.g. 40 batches 10 reps vs 20 batches 20 reps ). data seed .seed list element output, JAGS seed .seed column JAGS model output.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"target-objects","dir":"Reference","previous_headings":"","what":"Target objects","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"stantargets functions target factories, means return target objects lists target objects. Target objects represent skippable steps analysis pipeline described https://books.ropensci.org/targets/. Please read walkthrough https://books.ropensci.org/targets/walkthrough.html understand role target objects analysis pipelines. developers, https://wlandau.github.io/targetopia/contributing.html#target-factories explains target factories (functions like one generate targets) design specification https://books.ropensci.org/targets-design/ details structure composition target objects.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_dic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy DIC output from multiple MCMCs per model — tar_jags_rep_dic","text":"","code":"if (requireNamespace(\"R2jags\", quietly = TRUE)) { targets::tar_dir({ # tar_dir() runs code from a temporary directory. targets::tar_script({ library(jagstargets) # Do not use a temp file for a real project # or else your targets will always rerun. tmp <- tempfile(pattern = \"\", fileext = \".jags\") tar_jags_example_file(tmp) list(   tar_jags_rep_dic(     your_model,     jags_files = tmp,     data = tar_jags_example_data(),     parameters.to.save = \"beta\",     batches = 2,     reps = 2,     stdout = R.utils::nullfile(),     stderr = R.utils::nullfile()   ) ) }, ask = FALSE) targets::tar_make() }) } #> ▶ dispatched target your_model_file_X7773edfbfc5 #> ● completed target your_model_file_X7773edfbfc5 [0.001 seconds] #> ▶ dispatched target your_model_batch #> ● completed target your_model_batch [0 seconds] #> ▶ dispatched target your_model_lines_X7773edfbfc5 #> ● completed target your_model_lines_X7773edfbfc5 [0 seconds] #> ▶ dispatched branch your_model_data_7b1b1358 #> ● completed branch your_model_data_7b1b1358 [0.003 seconds] #> ▶ dispatched branch your_model_data_7b6d503e #> ● completed branch your_model_data_7b6d503e [0.002 seconds] #> ● completed pattern your_model_data #> ▶ dispatched branch your_model_X7773edfbfc5_24769822 #> ● completed branch your_model_X7773edfbfc5_24769822 [0.064 seconds] #> ▶ dispatched branch your_model_X7773edfbfc5_4e151279 #> ● completed branch your_model_X7773edfbfc5_4e151279 [0.057 seconds] #> ● completed pattern your_model_X7773edfbfc5 #> ▶ dispatched target your_model #> ● completed target your_model [0 seconds] #> ▶ ended pipeline [0.237 seconds] #> Warning message: #> package ‘targets’ was built under R version 4.3.3  #>"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"Run multiple MCMCs simulated datasets return posterior samples effective number parameters run.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"","code":"tar_jags_rep_draws(   name,   jags_files,   parameters.to.save,   data = list(),   batches = 1L,   reps = 1L,   transform = NULL,   combine = FALSE,   n.cluster = 1,   n.chains = 3,   n.iter = 2000,   n.burnin = as.integer(n.iter/2),   n.thin = 1,   jags.module = c(\"glm\", \"dic\"),   inits = NULL,   RNGname = c(\"Wichmann-Hill\", \"Marsaglia-Multicarry\", \"Super-Duper\", \"Mersenne-Twister\"),   jags.seed = NULL,   stdout = NULL,   stderr = NULL,   progress.bar = \"text\",   refresh = 0,   tidy_eval = targets::tar_option_get(\"tidy_eval\"),   packages = targets::tar_option_get(\"packages\"),   library = targets::tar_option_get(\"library\"),   format = \"qs\",   format_df = \"fst_tbl\",   repository = targets::tar_option_get(\"repository\"),   error = targets::tar_option_get(\"error\"),   memory = \"transient\",   garbage_collection = targets::tar_option_get(\"garbage_collection\"),   deployment = targets::tar_option_get(\"deployment\"),   priority = targets::tar_option_get(\"priority\"),   resources = targets::tar_option_get(\"resources\"),   storage = targets::tar_option_get(\"storage\"),   retrieval = targets::tar_option_get(\"retrieval\"),   cue = targets::tar_option_get(\"cue\"),   description = targets::tar_option_get(\"description\") )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"name Symbol, base name collection targets. Serves prefix target names. jags_files Character vector JAGS model files. supply multiple files, model run one shared dataset generated code data. supply unnamed vector, tools::file_path_sans_ext(basename(jags_files)) used target name suffixes. jags_files named vector, suffixed come names(jags_files). parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. data Code generate data list JAGS model. Optionally include .join_data element join parts data correspondingly named parameters summary output. See vignettes details. batches Number batches. batch runs model reps times. reps Number replications per batch. Ideally, rep produce random dataset using code supplied data. transform Symbol NULL, name function accepts arguments data draws returns data frame. , data JAGS data list supplied model, draws data frame one column per model parameter one row per posterior sample. arguments data draws must valid default values jagstargets populate . See simulation-based calibration discussion thread https://github.com/ropensci/jagstargets/discussions/31 example. combine Logical, whether create target combine model results single data frame downstream. Convenient, duplicates data. n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.seed jags.seed argument tar_jags_rep*() functions deprecated. See \"Seeds\" section details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. tidy_eval Logical, whether enable tidy evaluation interpreting command pattern. TRUE, can use \"bang-bang\" operator !! programmatically insert values global objects. packages Character vector packages load right target runs output data reloaded downstream targets. Use tar_option_set() set packages globally subsequent targets define. library Character vector library paths try loading packages. format Character length 1, storage format data frames posterior summaries data frames returned targets. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). format_df Character length 1, storage format data frame targets posterior draws. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). repository Character length 1, remote repository target storage. Choices: \"local\": file system local machine. \"aws\": Amazon Web Services (AWS) S3 bucket. Can configured non-AWS S3 bucket using endpoint argument tar_resources_aws(), versioning capabilities may lost . See cloud storage section https://books.ropensci.org/targets/data.html details instructions. \"gcp\": Google Cloud Platform storage bucket. See cloud storage section https://books.ropensci.org/targets/data.html details instructions. Note: repository \"local\" format \"file\" target create single output file. output file uploaded cloud tracked changes exists cloud. local file deleted target runs. error Character length 1, target stops throws error. Options: \"stop\": whole pipeline stops throws error. \"continue\": whole pipeline keeps going. \"abridge\": currently running targets keep running, new targets launch . (Visit https://books.ropensci.org/targets/debugging.html learn debug targets using saved workspaces.) \"null\": errored target continues returns NULL. data hash deliberately wrong target date next run pipeline. memory Character length 1, memory strategy. \"persistent\", target stays memory end pipeline (unless storage \"worker\", case targets unloads value memory right storing order avoid sending copious data network). \"transient\", target gets unloaded every new target completes. Either way, target gets automatically loaded memory whenever another target needs value. cloud-based dynamic files (e.g. format = \"file\" repository = \"aws\"), memory strategy applies temporary local copy file: \"persistent\" means remains end pipeline deleted, \"transient\" means gets deleted soon possible. former conserves bandwidth, latter conserves local storage. garbage_collection Logical, whether run base::gc() just target runs. deployment Character length 1. deployment \"main\", target run central controlling R process. Otherwise, deployment \"worker\" set pipeline distributed/parallel computing, target runs parallel worker. distributed/parallel computing targets, please visit https://books.ropensci.org/targets/crew.html. priority Numeric length 1 0 1. Controls targets get deployed first multiple competing targets ready simultaneously. Targets priorities closer 1 get dispatched earlier (polled earlier tar_make_future()). resources Object returned tar_resources() optional settings high-performance computing functionality, alternative data storage formats, optional capabilities targets. See tar_resources() details. storage Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's return value sent back host machine saved/uploaded locally. \"worker\": worker saves/uploads value. \"none\": almost never recommended. niche situations, e.g. data needs loaded explicitly another language. use , return value target totally ignored target ends, downstream target still attempts load data file (except retrieval = \"none\"). select storage = \"none\", return value target's command ignored, data saved automatically. dynamic files (format = \"file\") responsibility user write data store inside target. distinguishing feature storage = \"none\" (opposed format = \"file\") general case, downstream targets automatically try load data data store dependency. corollary, storage = \"none\" completely unnecessary format \"file\". retrieval Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's dependencies loaded host machine sent worker target runs. \"worker\": worker loads targets dependencies. \"none\": dependencies loaded . choice almost never recommended. niche situations, e.g. data needs loaded explicitly another language. cue optional object tar_cue() customize rules decide whether target date. description Character length 1, custom free-form human-readable text description target. Descriptions appear target labels functions like tar_manifest() tar_visnetwork(), let select subsets targets names argument functions like tar_make(). example, tar_manifest(names = tar_described_as(starts_with(\"survival model\"))) lists targets whose descriptions start character string \"survival model\".","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"tar_jags_rep_draws() returns list target objects. See \"Target objects\" section background. target names use name argument prefix, individual elements jags_files appear suffixes applicable. example, specific target objects returned tar_jags_rep_dic(name = x, jags_files = \"y.jags\") follows. x_file_y: reproducibly track JAGS model file. Returns character vector length 1 path JAGS model file. x_lines_y: read contents JAGS model file safe transport parallel workers. Returns character vector lines model file. x_data: use dynamic branching generate multiple JAGS datasets R expression data argument. dynamic branch returns batch JAGS data lists. x_y: run JAGS dataset x_data. dynamic branch returns tidy data frame draws batch data. x: combine batches x_y non-dynamic target. Suppressed combine FALSE. Returns long tidy data frame draws branches x_y.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"MCMC targets use R2jags::jags() n.cluster 1 R2jags::jags.parallel() otherwise. arguments tar_jags() forwarded functions.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"seeds","dir":"Reference","previous_headings":"","what":"Seeds","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"Rep-specific random number generator seeds data models automatically set based batch, rep, parent target name, tar_option_get(\"seed\"). ensures rep-specific seeds change change batching configuration (e.g. 40 batches 10 reps vs 20 batches 20 reps ). data seed .seed list element output, JAGS seed .seed column JAGS model output.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"target-objects","dir":"Reference","previous_headings":"","what":"Target objects","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"stantargets functions target factories, means return target objects lists target objects. Target objects represent skippable steps analysis pipeline described https://books.ropensci.org/targets/. Please read walkthrough https://books.ropensci.org/targets/walkthrough.html understand role target objects analysis pipelines. developers, https://wlandau.github.io/targetopia/contributing.html#target-factories explains target factories (functions like one generate targets) design specification https://books.ropensci.org/targets-design/ details structure composition target objects.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_draws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy posterior draws from multiple MCMCs per model — tar_jags_rep_draws","text":"","code":"if (requireNamespace(\"R2jags\", quietly = TRUE)) { targets::tar_dir({ # tar_dir() runs code from a temporary directory. targets::tar_script({ library(jagstargets) # Do not use a temp file for a real project # or else your targets will always rerun. tmp <- tempfile(pattern = \"\", fileext = \".jags\") tar_jags_example_file(tmp) list(   tar_jags_rep_draws(     your_model,     jags_files = tmp,     data = tar_jags_example_data(),     parameters.to.save = \"beta\",     batches = 2,     reps = 2,     stdout = R.utils::nullfile(),     stderr = R.utils::nullfile()   ) ) }, ask = FALSE) targets::tar_make() }) } #> ▶ dispatched target your_model_batch #> ● completed target your_model_batch [0.001 seconds] #> ▶ dispatched target your_model_file_X7982e7cd60d #> ● completed target your_model_file_X7982e7cd60d [0 seconds] #> ▶ dispatched branch your_model_data_7b1b1358 #> ● completed branch your_model_data_7b1b1358 [0.003 seconds] #> ▶ dispatched branch your_model_data_7b6d503e #> ● completed branch your_model_data_7b6d503e [0.002 seconds] #> ● completed pattern your_model_data #> ▶ dispatched target your_model_lines_X7982e7cd60d #> ● completed target your_model_lines_X7982e7cd60d [0 seconds] #> ▶ dispatched branch your_model_X7982e7cd60d_24769822 #> ● completed branch your_model_X7982e7cd60d_24769822 [0.066 seconds] #> ▶ dispatched branch your_model_X7982e7cd60d_4e151279 #> ● completed branch your_model_X7982e7cd60d_4e151279 [0.06 seconds] #> ● completed pattern your_model_X7982e7cd60d #> ▶ ended pipeline [0.247 seconds] #> Warning message: #> package ‘targets’ was built under R version 4.3.3  #>"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a batch of iterations for a jags model\nand return only strategic output. — tar_jags_rep_run","title":"Run a batch of iterations for a jags model\nand return only strategic output. — tar_jags_rep_run","text":"user-side function. invoke directly.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a batch of iterations for a jags model\nand return only strategic output. — tar_jags_rep_run","text":"","code":"tar_jags_rep_run(   jags_lines,   jags_name,   jags_file,   parameters.to.save,   data,   variables = NULL,   summaries = NULL,   summary_args = NULL,   transform = NULL,   reps,   output,   n.cluster = n.cluster,   n.chains = n.chains,   n.iter = n.iter,   n.burnin = n.burnin,   n.thin = n.thin,   jags.module = jags.module,   inits = inits,   RNGname = RNGname,   stdout = stdout,   stderr = stderr,   progress.bar = progress.bar,   refresh = refresh )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a batch of iterations for a jags model\nand return only strategic output. — tar_jags_rep_run","text":"jags_lines Character vector lines JAGS file. jags_name Friendly suffix jags model target. jags_file Original path input jags file. parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. data list, original JAGS dataset. variables Character vector model parameter names. output posterior summaries restricted variables. summaries List summary functions passed ... posterior::summarize_draws() $summary() CmdStanFit object. summary_args List summary function arguments passed .args posterior::summarize_draws() $summary() CmdStanFit object. transform Symbol NULL, name function accepts arguments data draws returns data frame. , data JAGS data list supplied model, draws data frame one column per model parameter one row per posterior sample. arguments data draws must valid default values jagstargets populate . See simulation-based calibration discussion thread https://github.com/ropensci/jagstargets/discussions/31 example. output Character length 1 denoting type output tibble return: \"draws\" MCMC samples (take lot space) \"summary\" lightweight posterior summary statistics, \"dic\" overall deviance information criterion effective number parameters n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a batch of iterations for a jags model\nand return only strategic output. — tar_jags_rep_run","text":"data frame posterior summaries.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"Run multiple MCMCs simulated datasets return posterior summaries effective number parameters run.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"","code":"tar_jags_rep_summary(   name,   jags_files,   parameters.to.save,   data = list(),   variables = NULL,   summaries = NULL,   summary_args = NULL,   batches = 1L,   reps = 1L,   combine = TRUE,   n.cluster = 1,   n.chains = 3,   n.iter = 2000,   n.burnin = as.integer(n.iter/2),   n.thin = 1,   jags.module = c(\"glm\", \"dic\"),   inits = NULL,   RNGname = c(\"Wichmann-Hill\", \"Marsaglia-Multicarry\", \"Super-Duper\", \"Mersenne-Twister\"),   jags.seed = NULL,   stdout = NULL,   stderr = NULL,   progress.bar = \"text\",   refresh = 0,   tidy_eval = targets::tar_option_get(\"tidy_eval\"),   packages = targets::tar_option_get(\"packages\"),   library = targets::tar_option_get(\"library\"),   format = \"qs\",   format_df = \"fst_tbl\",   repository = targets::tar_option_get(\"repository\"),   error = targets::tar_option_get(\"error\"),   memory = \"transient\",   garbage_collection = targets::tar_option_get(\"garbage_collection\"),   deployment = targets::tar_option_get(\"deployment\"),   priority = targets::tar_option_get(\"priority\"),   resources = targets::tar_option_get(\"resources\"),   storage = targets::tar_option_get(\"storage\"),   retrieval = targets::tar_option_get(\"retrieval\"),   cue = targets::tar_option_get(\"cue\"),   description = targets::tar_option_get(\"description\") )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"name Symbol, base name collection targets. Serves prefix target names. jags_files Character vector JAGS model files. supply multiple files, model run one shared dataset generated code data. supply unnamed vector, tools::file_path_sans_ext(basename(jags_files)) used target name suffixes. jags_files named vector, suffixed come names(jags_files). parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. data Code generate data list JAGS model. Optionally include .join_data element join parts data correspondingly named parameters summary output. See vignettes details. variables Character vector model parameter names. output posterior summaries restricted variables. summaries List summary functions passed ... posterior::summarize_draws() $summary() CmdStanFit object. summary_args List summary function arguments passed .args posterior::summarize_draws() $summary() CmdStanFit object. batches Number batches. batch runs model reps times. reps Number replications per batch. Ideally, rep produce random dataset using code supplied data. combine Logical, whether create target combine model results single data frame downstream. Convenient, duplicates data. n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.seed jags.seed argument tar_jags_rep*() functions deprecated. See \"Seeds\" section details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. tidy_eval Logical, whether enable tidy evaluation interpreting command pattern. TRUE, can use \"bang-bang\" operator !! programmatically insert values global objects. packages Character vector packages load right target runs output data reloaded downstream targets. Use tar_option_set() set packages globally subsequent targets define. library Character vector library paths try loading packages. format Character length 1, storage format data frames posterior summaries data frames returned targets. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). format_df Character length 1, storage format data frame targets posterior draws. recommend efficient data frame formats \"feather\" \"aws_parquet\". storage formats, see help file targets::tar_target(). repository Character length 1, remote repository target storage. Choices: \"local\": file system local machine. \"aws\": Amazon Web Services (AWS) S3 bucket. Can configured non-AWS S3 bucket using endpoint argument tar_resources_aws(), versioning capabilities may lost . See cloud storage section https://books.ropensci.org/targets/data.html details instructions. \"gcp\": Google Cloud Platform storage bucket. See cloud storage section https://books.ropensci.org/targets/data.html details instructions. Note: repository \"local\" format \"file\" target create single output file. output file uploaded cloud tracked changes exists cloud. local file deleted target runs. error Character length 1, target stops throws error. Options: \"stop\": whole pipeline stops throws error. \"continue\": whole pipeline keeps going. \"abridge\": currently running targets keep running, new targets launch . (Visit https://books.ropensci.org/targets/debugging.html learn debug targets using saved workspaces.) \"null\": errored target continues returns NULL. data hash deliberately wrong target date next run pipeline. memory Character length 1, memory strategy. \"persistent\", target stays memory end pipeline (unless storage \"worker\", case targets unloads value memory right storing order avoid sending copious data network). \"transient\", target gets unloaded every new target completes. Either way, target gets automatically loaded memory whenever another target needs value. cloud-based dynamic files (e.g. format = \"file\" repository = \"aws\"), memory strategy applies temporary local copy file: \"persistent\" means remains end pipeline deleted, \"transient\" means gets deleted soon possible. former conserves bandwidth, latter conserves local storage. garbage_collection Logical, whether run base::gc() just target runs. deployment Character length 1. deployment \"main\", target run central controlling R process. Otherwise, deployment \"worker\" set pipeline distributed/parallel computing, target runs parallel worker. distributed/parallel computing targets, please visit https://books.ropensci.org/targets/crew.html. priority Numeric length 1 0 1. Controls targets get deployed first multiple competing targets ready simultaneously. Targets priorities closer 1 get dispatched earlier (polled earlier tar_make_future()). resources Object returned tar_resources() optional settings high-performance computing functionality, alternative data storage formats, optional capabilities targets. See tar_resources() details. storage Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's return value sent back host machine saved/uploaded locally. \"worker\": worker saves/uploads value. \"none\": almost never recommended. niche situations, e.g. data needs loaded explicitly another language. use , return value target totally ignored target ends, downstream target still attempts load data file (except retrieval = \"none\"). select storage = \"none\", return value target's command ignored, data saved automatically. dynamic files (format = \"file\") responsibility user write data store inside target. distinguishing feature storage = \"none\" (opposed format = \"file\") general case, downstream targets automatically try load data data store dependency. corollary, storage = \"none\" completely unnecessary format \"file\". retrieval Character length 1, relevant tar_make_clustermq() tar_make_future(). Must one following values: \"main\": target's dependencies loaded host machine sent worker target runs. \"worker\": worker loads targets dependencies. \"none\": dependencies loaded . choice almost never recommended. niche situations, e.g. data needs loaded explicitly another language. cue optional object tar_cue() customize rules decide whether target date. description Character length 1, custom free-form human-readable text description target. Descriptions appear target labels functions like tar_manifest() tar_visnetwork(), let select subsets targets names argument functions like tar_make(). example, tar_manifest(names = tar_described_as(starts_with(\"survival model\"))) lists targets whose descriptions start character string \"survival model\".","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"tar_jags_rep_summary() returns list target objects. See \"Target objects\" section background. target names use name argument prefix, individual elements jags_files appear suffixes applicable. example, specific target objects returned tar_jags_rep_dic(name = x, jags_files = \"y.jags\") follows. x_file_y: reproducibly track JAGS model file. Returns character vector length 1 path JAGS model file. x_lines_y: read contents JAGS model file safe transport parallel workers. Returns character vector lines model file. x_data: use dynamic branching generate multiple JAGS datasets R expression data argument. dynamic branch returns batch JAGS data lists. x_y: run JAGS dataset x_data. dynamic branch returns tidy data frame summaries batch data. x: combine batches x_y non-dynamic target. Suppressed combine FALSE. Returns long tidy data frame summaries branches x_y.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"MCMC targets use R2jags::jags() n.cluster 1 R2jags::jags.parallel() otherwise. arguments tar_jags() forwarded functions.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"seeds","dir":"Reference","previous_headings":"","what":"Seeds","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"Rep-specific random number generator seeds data models automatically set based batch, rep, parent target name, tar_option_get(\"seed\"). ensures rep-specific seeds change change batching configuration (e.g. 40 batches 10 reps vs 20 batches 20 reps ). data seed .seed list element output, JAGS seed .seed column JAGS model output.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"target-objects","dir":"Reference","previous_headings":"","what":"Target objects","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"stantargets functions target factories, means return target objects lists target objects. Target objects represent skippable steps analysis pipeline described https://books.ropensci.org/targets/. Please read walkthrough https://books.ropensci.org/targets/walkthrough.html understand role target objects analysis pipelines. developers, https://wlandau.github.io/targetopia/contributing.html#target-factories explains target factories (functions like one generate targets) design specification https://books.ropensci.org/targets-design/ details structure composition target objects.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_rep_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy posterior summaries from multiple MCMCs per model — tar_jags_rep_summary","text":"","code":"if (requireNamespace(\"R2jags\", quietly = TRUE)) { targets::tar_dir({ # tar_dir() runs code from a temporary directory. targets::tar_script({ library(jagstargets) # Do not use a temp file for a real project # or else your targets will always rerun. tmp <- tempfile(pattern = \"\", fileext = \".jags\") tar_jags_example_file(tmp) list(   tar_jags_rep_summary(     your_model,     jags_files = tmp,     data = tar_jags_example_data(),     parameters.to.save = \"beta\",     batches = 2,     reps = 2,     stdout = R.utils::nullfile(),     stderr = R.utils::nullfile()   ) ) }, ask = FALSE) targets::tar_make() }) } #> ▶ dispatched target your_model_file_X7c6555f1b #> ● completed target your_model_file_X7c6555f1b [0.001 seconds] #> ▶ dispatched target your_model_batch #> ● completed target your_model_batch [0.001 seconds] #> ▶ dispatched target your_model_lines_X7c6555f1b #> ● completed target your_model_lines_X7c6555f1b [0.001 seconds] #> ▶ dispatched branch your_model_data_7b1b1358 #> ● completed branch your_model_data_7b1b1358 [0.003 seconds] #> ▶ dispatched branch your_model_data_7b6d503e #> ● completed branch your_model_data_7b6d503e [0.003 seconds] #> ● completed pattern your_model_data #> ▶ dispatched branch your_model_X7c6555f1b_24769822 #> ● completed branch your_model_X7c6555f1b_24769822 [0.128 seconds] #> ▶ dispatched branch your_model_X7c6555f1b_4e151279 #> ● completed branch your_model_X7c6555f1b_4e151279 [0.123 seconds] #> ● completed pattern your_model_X7c6555f1b #> ▶ dispatched target your_model #> ● completed target your_model [0 seconds] #> ▶ ended pipeline [0.365 seconds] #> Warning message: #> package ‘targets’ was built under R version 4.3.3  #>"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a JAGS model and return the whole output object. — tar_jags_run","title":"Run a JAGS model and return the whole output object. — tar_jags_run","text":"user-side function. invoke directly.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a JAGS model and return the whole output object. — tar_jags_run","text":"","code":"tar_jags_run(   jags_lines,   parameters.to.save,   data,   inits,   n.cluster,   n.chains,   n.iter,   n.burnin,   n.thin,   jags.module,   RNGname,   jags.seed,   stdout,   stderr,   progress.bar,   refresh )"},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a JAGS model and return the whole output object. — tar_jags_run","text":"jags_lines Character vector lines JAGS model file. parameters..save Model parameters save, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. inits Initial values model parameters, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.cluster Number parallel processes, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.chains Number MCMC chains, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.iter Number iterations (including warmup), passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.burnin Number warmup iterations, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. n.thin Thinning interval, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.module Character vector JAGS modules load, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. RNGname Choice random number generator, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. jags.seed Seeds apply JAGS, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. stdout Character length 1, file path write stdout stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stdout. apply messages, warnings, errors. stderr Character length 1, file path write stderr stream model runs. Set NULL print console. Set R.utils::nullfile() suppress stderr. apply messages, warnings, errors. progress.bar Type progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details. refresh Frequency refreshing progress bar, passed R2jags::jags() R2jags::jags.parallel(). See argument documentation R2jags::jags() R2jags::jags.parallel() help files details.","code":""},{"path":"https://docs.ropensci.org/jagstargets/reference/tar_jags_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a JAGS model and return the whole output object. — tar_jags_run","text":"R2jags output object.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-1109001-development","dir":"Changelog","previous_headings":"","what":"jagstargets 1.1.0.9001 (development)","title":"jagstargets 1.1.0.9001 (development)","text":"Add new description arguments tar_target() (`targets >= 1.5.1.9001). Append model file information target descriptions using tar_map() (tarchetypes >= 0.7.12.9001).","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-110","dir":"Changelog","previous_headings":"","what":"jagstargets 1.1.0","title":"jagstargets 1.1.0","text":"CRAN release: 2023-01-06 Add transform argument tar_jags_rep() support simulation-based calibration.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-104","dir":"Changelog","previous_headings":"","what":"jagstargets 1.0.4","title":"jagstargets 1.0.4","text":"CRAN release: 2022-10-31 Migrate docs away deprecated targets::tar_path(). Implement resilient reps-specific seeds tar_jags_rep*() functions.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-103","dir":"Changelog","previous_headings":"","what":"jagstargets 1.0.3","title":"jagstargets 1.0.3","text":"CRAN release: 2022-06-24 Append new .dataset_id column target outputs aid model comparisons across datasets.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-102","dir":"Changelog","previous_headings":"","what":"jagstargets 1.0.2","title":"jagstargets 1.0.2","text":"CRAN release: 2022-05-03 Support repository argument targets >= 0.11.0.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-101","dir":"Changelog","previous_headings":"","what":"jagstargets 1.0.1","title":"jagstargets 1.0.1","text":"CRAN release: 2021-12-03 Adjust logo size README.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-101-1","dir":"Changelog","previous_headings":"","what":"jagstargets 1.0.1","title":"jagstargets 1.0.1","text":"CRAN release: 2021-12-03 Reference JOSS paper.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-100","dir":"Changelog","previous_headings":"","what":"jagstargets 1.0.0","title":"jagstargets 1.0.0","text":"Add Zenodo badge. Fix bibliography capitalization.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-001","dir":"Changelog","previous_headings":"","what":"jagstargets 0.0.1","title":"jagstargets 0.0.1","text":"Complete rOpenSci review. Allow installation/checks pass without rjags R2jags installed (#18, @jeroen).","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-0009002","dir":"Changelog","previous_headings":"","what":"jagstargets 0.0.0.9002","title":"jagstargets 0.0.0.9002","text":"Replace log argument stdout stderr. Switch meaning %||% %|||% conform historical precedent.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-0009001","dir":"Changelog","previous_headings":"","what":"jagstargets 0.0.0.9001","title":"jagstargets 0.0.0.9001","text":"Use .join_data list element instead arguments copy_data omit_data.","code":""},{"path":"https://docs.ropensci.org/jagstargets/news/index.html","id":"jagstargets-0009000","dir":"Changelog","previous_headings":"","what":"jagstargets 0.0.0.9000","title":"jagstargets 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
